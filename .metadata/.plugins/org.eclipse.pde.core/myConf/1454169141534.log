!SESSION 2016-01-30 16:52:21.343 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.8.0_65
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=fr_FR
Command-line arguments:  -dev file:/home/steve/Bureau/Nostromo/workspace/osgi/sources-dev/.metadata/.plugins/org.eclipse.pde.core/myConf/dev.properties -os linux -ws gtk -arch x86_64 -consoleLog -console

!ENTRY m2dl.osgi.parser 4 0 2016-01-30 16:52:21.885
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Exception in m2dl.osgi.parser.Activator.start() of bundle m2dl.osgi.parser.
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:792)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:721)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:941)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:318)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1562)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.SystemModule.startWorker(SystemModule.java:242)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.container.SystemModule.start(SystemModule.java:172)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.start(EquinoxBundle.java:392)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.start(EquinoxBundle.java:411)
	at org.eclipse.osgi.launch.Equinox.start(Equinox.java:115)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:318)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1488)
Caused by: java.lang.NullPointerException
	at m2dl.osgi.parser.Activator.start(Activator.java:28)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:771)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:764)
	... 25 more
Root exception:
java.lang.NullPointerException
	at m2dl.osgi.parser.Activator.start(Activator.java:28)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:771)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:764)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:721)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:941)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:318)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1562)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.SystemModule.startWorker(SystemModule.java:242)
	at org.eclipse.osgi.container.Module.doStart(Module.java:571)
	at org.eclipse.osgi.container.Module.start(Module.java:439)
	at org.eclipse.osgi.container.SystemModule.start(SystemModule.java:172)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.start(EquinoxBundle.java:392)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.start(EquinoxBundle.java:411)
	at org.eclipse.osgi.launch.Equinox.start(Equinox.java:115)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:318)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1488)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:52:27.243
!MESSAGE While loading class "com.sun.prism.GraphicsPipeline", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5001ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.GraphicsPipeline" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:52:32.245
!MESSAGE While loading class "com.sun.javafx.font.FontFactory", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5000ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.javafx.font.FontFactory" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:52:37.248
!MESSAGE While loading class "com.sun.prism.es2.ES2Pipeline", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5000ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.es2.ES2Pipeline" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:52:42.251
!MESSAGE While loading class "com.sun.prism.ResourceFactory", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5000ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.ResourceFactory" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:52:47.255
!MESSAGE While loading class "com.sun.prism.es2.GLPixelFormat$Attributes", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5001ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.es2.GLPixelFormat$Attributes" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.sun.prism.es2.ES2Pipeline.<clinit>(ES2Pipeline.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:52:52.257
!MESSAGE While loading class "com.sun.prism.es2.GLPixelFormat", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5000ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.es2.GLPixelFormat" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.sun.prism.es2.GLPixelFormat$Attributes.<init>(GLPixelFormat.java:94)
	at com.sun.prism.es2.ES2Pipeline.<clinit>(ES2Pipeline.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:52:57.261
!MESSAGE While loading class "com.sun.glass.utils.NativeLibLoader", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5000ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.glass.utils.NativeLibLoader" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.sun.prism.es2.ES2Pipeline.lambda$static$465(ES2Pipeline.java:68)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.prism.es2.ES2Pipeline.<clinit>(ES2Pipeline.java:50)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:53:02.605
!MESSAGE While loading class "com.sun.prism.es2.GLFactory", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5000ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.es2.GLFactory" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.sun.prism.es2.ES2Pipeline.<clinit>(ES2Pipeline.java:76)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:53:07.608
!MESSAGE While loading class "com.sun.prism.es2.GLFactory$FactoryLoader", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5000ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.es2.GLFactory$FactoryLoader" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.sun.prism.es2.GLFactory.<clinit>(GLFactory.java:96)
	at com.sun.prism.es2.ES2Pipeline.<clinit>(ES2Pipeline.java:76)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:53:12.611
!MESSAGE While loading class "com.sun.prism.es2.X11GLFactory", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5000ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.es2.X11GLFactory" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.es2.GLFactory$FactoryLoader.run(GLFactory.java:108)
	at com.sun.prism.es2.GLFactory$FactoryLoader.run(GLFactory.java:100)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.prism.es2.GLFactory.<clinit>(GLFactory.java:97)
	at com.sun.prism.es2.ES2Pipeline.<clinit>(ES2Pipeline.java:76)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:53:17.614
!MESSAGE While loading class "com.sun.prism.es2.GLContext", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5000ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.es2.GLContext" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.es2.GLFactory$FactoryLoader.run(GLFactory.java:108)
	at com.sun.prism.es2.GLFactory$FactoryLoader.run(GLFactory.java:100)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.prism.es2.GLFactory.<clinit>(GLFactory.java:97)
	at com.sun.prism.es2.ES2Pipeline.<clinit>(ES2Pipeline.java:76)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:53:22.616
!MESSAGE While loading class "com.sun.prism.es2.X11GLContext", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5001ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.es2.X11GLContext" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.es2.GLFactory$FactoryLoader.run(GLFactory.java:108)
	at com.sun.prism.es2.GLFactory$FactoryLoader.run(GLFactory.java:100)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.prism.es2.GLFactory.<clinit>(GLFactory.java:97)
	at com.sun.prism.es2.ES2Pipeline.<clinit>(ES2Pipeline.java:76)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)

!ENTRY org.eclipse.osgi 2 0 2016-01-30 16:53:27.618
!MESSAGE While loading class "com.sun.prism.es2.GLDrawable", thread "Thread[QuantumRenderer-0,5,main]" timed out waiting (5000ms) for thread "Thread[Start Level: Equinox Container: 50b2e072-69c7-0015-1069-aebe8c057d0a,5,main]" to finish starting bundle "m2dl.osgi.editor_1.0.0 [16]". To avoid deadlock, thread "Thread[QuantumRenderer-0,5,main]" is proceeding but "com.sun.prism.es2.GLDrawable" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: Unable to acquire the state change lock for the module: osgi.identity; osgi.identity="m2dl.osgi.editor"; type="osgi.bundle"; version:Version="1.0.0"; singleton:="true" [id=16] STARTED [STARTED]
	at org.eclipse.osgi.container.Module.lockStateChange(Module.java:329)
	at org.eclipse.osgi.container.Module.start(Module.java:389)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:327)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:402)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:352)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:344)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.es2.GLFactory$FactoryLoader.run(GLFactory.java:108)
	at com.sun.prism.es2.GLFactory$FactoryLoader.run(GLFactory.java:100)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.prism.es2.GLFactory.<clinit>(GLFactory.java:97)
	at com.sun.prism.es2.ES2Pipeline.<clinit>(ES2Pipeline.java:76)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:187)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:91)
	at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:124)
	at java.lang.Thread.run(Thread.java:745)
